import React, { useEffect, useState } from 'react';
import { useNavigate, useParams } from 'react-router-dom';
import DefaultHeader from '../component/DefaultHeader_main';
import DefaultFooter from '../component/DefaultFooter';
import '../css/crewBoardDetail.css';


const CrewBoardDetail = () => {

    const {boardId} = useParams();

    // ‚úèÔ∏è Í≤åÏãúÍ∏Ä Îç∞Ïù¥ÌÑ∞
    const [crewBoardData, setCrewBoardData] = useState({
        boardId : 0,                // Í≤åÏãúÍ∏Ä ID
        boardTitle : "",            // Í≤åÏãúÍ∏Ä Ï†úÎ™©
        boardContext : "",          // Í≤åÏãúÍ∏Ä ÎÇ¥Ïö©
        boardType : "",             // Í≤åÏãúÍ∏Ä ÌÉÄÏûÖ
        boardWriter : "",           // Í≤åÏãúÍ∏Ä ÏûëÏÑ±Ïûê
        WriterLevel : "",           // ÏûëÏÑ±Ïûê Îì±Í∏â
        boardViewCnt : "",          // Í≤åÏãúÍ∏Ä Ï°∞ÌöåÏàò
        emergencyNote : false,      // Í≤åÏãúÍ∏Ä Í∏¥Í∏â Ïó¨Î∂Ä
        endDate : "",               // Í≤åÏãúÍ∏Ä ÏùºÏ†ï Ï¢ÖÎ£åÎÇ†Ïßú
        startDate : "",             // Í≤åÏãúÍ∏Ä ÏùºÏ†ï ÏãúÏûëÎÇ†Ïßú
        regDate : "",               // Í≤åÏãúÍ∏Ä ÏÉùÏÑ± ÎÇ†Ïßú
        tourAddress : "",           // Í≤åÏãúÍ∏Ä Î™®ÏûÑ Ïû•ÏÜå
    });

    // üõú Í≤åÏãúÍ∏Ä Îç∞Ïù¥ÌÑ∞ Ï°∞Ìöå ÏöîÏ≤≠
    const loadBoardData = async () => {
        console.log("üõú ÏÑúÎ≤ÑÎ°ú Í≤åÏãúÍ∏Ä Ï°∞Ìöå ÏöîÏ≤≠");
        await fetch(`/CR/BoardDetail/board?boardId=${boardId}`,{
            headers:{
                "Authorization": `Bearer ${sessionStorage.getItem('accessToken')}`,
                "Content-Type": "application/json;charset=utf-8"
            }
        }).then(response=>{
            if(response.status===200){
                console.log("‚úÖ ÏÑúÎ≤Ñ ÏùëÎãµ ÏôÑÎ£å");
                return response.json();
            } else {
                console.log("‚ùå ÏÑúÎ≤Ñ ÏùëÎãµ Ïã§Ìå®");
                console.log("ÏÇ¨Ïú† : "+response.status);
            }
        }).then(boardData=>{
            if(!!boardData){

                // üõ†Ô∏è Í≤åÏãúÍ∏Ä ÌÉÄÏûÖ ÏÑ§Ï†ï
                let resultBoardType = "";
                switch(boardData.boardType){
                    case "Note" : 
                        resultBoardType = "Í≥µÏßÄÍ∏Ä"
                        break;
                    case "Tour" : 
                        resultBoardType = "Î™®ÏûÑÍ∏Ä"
                        break;
                    case "Free" : 
                        resultBoardType = "ÏûêÏú†Í∏Ä"
                        break;
                    case "Greetings" : 
                        resultBoardType = "Ïù∏ÏÇ¨Í∏Ä"
                        break;
                    default : 
                }
                    
                // üõ†Ô∏è ÏûëÏÑ±Ïûê Îì±Í∏â ÏÑ§Ï†ï
                let writerLevel = "";
                    switch(boardData.writer.authorityId.authorityName){
                        case "ROLE_CREW_Master":
                            writerLevel = "ÎßàÏä§ÌÑ∞";
                            break;
                        case "ROLE_CREW_Member":
                            writerLevel = "Î©§Î≤Ñ";
                            break;
                        case "ROLE_RA_ADMIN":
                            writerLevel = "Í¥ÄÎ¶¨Ïûê";
                            break;
                        default : 
                    }
                let dateformatte = { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' };
                let resultBoardData = {
                    boardId : boardData.boardId,
                    boardTitle : boardData.boardTitle,
                    boardContext : boardData.boardContext,
                    boardType : resultBoardType,
                    boardWriter : boardData.writer.userNickname,  
                    writerLevel : writerLevel,
                    boardViewCnt : boardData.boardCnt, 
                    emergencyNote : boardData.emergencyNote,
                    endDate : new Date(boardData.endDate).toLocaleDateString('ko-KR',dateformatte),
                    startDate : new Date(boardData.startDate).toLocaleDateString('ko-KR',dateformatte),
                    regDate : new Date(boardData.regDate).toLocaleDateString('ko-KR',dateformatte),
                    tourAddress : boardData.address
                }
                setCrewBoardData(resultBoardData);
                console.log(resultBoardData);
            }
        })
    }

    useEffect(()=>{
        loadBoardData();
    },[])

    return (
        <main>
            <DefaultHeader/>
                <section className='CrewBoardDetail'>
                    <div className='BoardTopLine'>
                        <div className='boardTypeLine'>
                            <h1>ÌÅ¨Î£®</h1>
                            <h1>{crewBoardData.boardType}</h1>
                        </div>
                        <div className='TopLine1'>
                            <div className='TopLine2'>
                                <div className='BoardInfoTop'>
                                    <h2>‚úèÔ∏èÏûëÏÑ±Ïûê</h2>
                                    <h2>{crewBoardData.boardWriter}</h2>
                                    <span><h2>{crewBoardData.writerLevel}</h2></span>
                                </div>
                                <div className='BoardInfoTop'>
                                    <h2>{crewBoardData.startDate+" ~ "+crewBoardData.endDate}</h2>
                                </div>
                            </div>
                            <div className='TopLine2'>
                                <h1>{crewBoardData.boardTitle}</h1>
                                <div className='TourAddressLine'>
                                    <h3 id='address'>Ïû•ÏÜåüö©</h3>
                                    <h3>{crewBoardData.tourAddress}</h3>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div className='BoardBottomLine'>
                        <div className='TourInfoSlideOff'>
                            <div className='AttendanceCnt'>
                                <h2>Ï∞∏Ïó¨ Ïù∏Ïõê</h2>
                                <h2>(100/100)</h2>
                            </div>
                            <div className='TourBtnLine' id='Off'>
                                <input type='checkbox' id='attachOkay' hidden/>
                                <label htmlFor='attachOkay'><h2>Ï∞∏Ïó¨</h2></label>
                                <input type='checkbox' id='attachNon' hidden/>
                                <label htmlFor='attachNon'><h2>Î∂àÏ∞∏Ïó¨</h2></label>
                            </div>
                        </div>
                        <div className='TourInfoSideOn'>
                            <div className='AttendanceListTop'>
                                <div className='AttendanceCnt'>
                                    <h2>Ï∞∏Ïó¨ Ïù∏Ïõê</h2>
                                    <h2>(100/100)</h2>
                                </div>
                                <div className='TourBtnLine' id='On'>
                                    <input type='checkbox' id='attachOkay' checked hidden/>
                                    <label htmlFor='attachOkay'><h2>Ï∞∏Ïó¨</h2></label>
                                    <input type='checkbox' id='attachNon' hidden/>
                                    <label htmlFor='attachNon'><h2>Î∂àÏ∞∏Ïó¨</h2></label>
                                </div>
                            </div>
                            <div className='AttendanceListBottom'>
                                <div className='CrewAttendanceBox'>
                                    <label>
                                        <h2>ÎãâÎÑ§ÏûÑ ÌÖåÏä§Ìä∏</h2>
                                        <h2>ÎßàÏä§ÌÑ∞</h2>
                                        <h2>92</h2>
                                        <h2>ÏÑúÏö∏/Í¥ÄÏïÖ</h2>
                                    </label>
                                    <input type='button' hidden/>
                                </div>
                            </div>
                        </div>
                        
                        <div className='TourSlideBtn'>
                                    <label htmlFor='TourSlideBtn'><h2>Î™Ö<br/>Îã®<br/> <br/>Î≥¥<br/>Í∏∞</h2></label>
                                    <input id='TourSlideBtn' hidden/>
                            </div>
                        <div>

                        </div>
                    </div>
                </section>
            <DefaultFooter/>
        </main>
    );
};

export default CrewBoardDetail;